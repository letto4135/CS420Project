#pragma checksum "/Users/alife/Other/CS420Project/RestaurantFrontEnd/Pages/Hosts/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4764ee5298a38b6302874e7fcb26cae35bf594b1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(RestaurantFrontEnd.Pages.Hosts.Pages_Hosts_Index), @"mvc.1.0.razor-page", @"/Pages/Hosts/Index.cshtml")]
namespace RestaurantFrontEnd.Pages.Hosts
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/alife/Other/CS420Project/RestaurantFrontEnd/Pages/_ViewImports.cshtml"
using RestaurantFrontEnd;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4764ee5298a38b6302874e7fcb26cae35bf594b1", @"/Pages/Hosts/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d604ee56b1ee77fb7b5cd928741852730b0660c4", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Hosts_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<style>
    .tableNumberStyle {
        width: 3rem;
    }

    h3, form {
        width: 100%;
    }
</style>
<h1 style=""margin-bottom:3rem;"">Hosts</h1>
<div class=""row"">
    <div class=""col-6"">
        <div class=""row"">
            <h3>New Reservation</h3>
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4764ee5298a38b6302874e7fcb26cae35bf594b13634", async() => {
                WriteLiteral(@"
                <div class=""form-group"">
                    <label for=""lastName"">Last Name</label>
                    <input type=""text"" class=""form-control"" id=""lastName"" placeholder=""Enter last name"">
                </div>
                <div class=""form-group"">
                    <label for=""guests"">Number of Guests</label>
                    <input type=""number"" class=""form-control"" id=""guests"" placeholder=""Number of Guests"">
                </div>
                <div class=""form-group"">
                    <label for=""phoneNumber"">Phone Number</label>
                    <input type=""number"" class=""form-control"" id=""phoneNumber"">
                </div>
                <button type=""submit"" class=""btn btn-primary"">Submit</button>
            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
        <div class=""row"">
            <h3>Available Tables</h3>
            <table class=""table table-striped"">
                <thead class=""thead-dark"">
                    <tr>
                        <th scope=""col"">Table Number</th>
                        <th scope=""col"">Seats</th>
                        <th scope=""col"">Remove</th>
                    </tr>
                </thead>
                <tbody id=""availableTableTableBody"">
                    <tr>
                        <th scope=""row"">23</th>
                        <td>4</td>
                        <td onclick=""deleteTableRow(this)""><button type=""button"" class=""btn btn-danger"">X</button></td>
                    </tr>
                    <tr>
                        <th scope=""row"">24</th>
                        <td>2</td>
                        <td onclick=""deleteTableRow(this)""><button type=""button"" class=""btn btn-danger"">X</button></td>
                    </tr>
                    <tr>
                        <th sc");
            WriteLiteral(@"ope=""row"">26</th>
                        <td>8</td>
                        <td onclick=""deleteTableRow(this)""><button type=""button"" class=""btn btn-danger"">X</button></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class=""col-6"">
        <h3>Reservations</h3>
        <table class=""table table-striped"">
            <thead class=""thead-dark"">
                <tr>
                    <th scope=""col"">Last Name</th>
                    <th scope=""col"">Guests</th>
                    <th scope=""col"">Phone Number</th>
                    <th scope=""col"">Table Number</th>
                    <th scope=""col"">Remove</th>
                </tr>
            </thead>
            <tbody id=""reservationTableBody"">
                <tr>
                    <th scope=""row"">Otto</th>
                    <td>4</td>
                    <td>304-863-2432</td>
                    <td><input class=""tableNumberStyle"" type=""number"" placeholder=""-"" /></td>
                 ");
            WriteLiteral(@"   <td onclick=""deleteReservationRow(this)""><button type=""button"" class=""btn btn-danger"">X</button></td>
                </tr>
                <tr>
                    <th scope=""row"">Thornton</th>
                    <td>2</td>
                    <td>304-221-4823</td>
                    <td><input class=""tableNumberStyle"" type=""number"" placeholder=""-"" /></td>
                    <td onclick=""deleteReservationRow(this)""><button type=""button"" class=""btn btn-danger"">X</button></td>
                </tr>
                <tr>
                    <th scope=""row"">Bird</th>
                    <td>8</td>
                    <td>814-231-5692</td>
                    <td><input class=""tableNumberStyle"" type=""number"" placeholder=""-"" /></td>
                    <td onclick=""deleteReservationRow(this)""><button type=""button"" class=""btn btn-danger"">X</button></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Common scripts -->
<script>
    const form = document.getElementById('form'");
            WriteLiteral(@");
    form.addEventListener('submit', newReservation);

    function newReservation(event) {
        event.preventDefault();

        // get the form elements
        let nameBox = document.getElementById(""lastName""); let guestBox = document.getElementById(""guests""); let phoneBox = document.getElementById(""phoneNumber"");

        // get the values of the form elements
        let lastName = nameBox.value; let guests = guestBox.value; let phoneNumber = phoneBox.value;

        // remove values from boxes after getting the values
        nameBox.value = """"; guestBox.value = """"; phoneBox.value = """";

        // post the reservation to host api
        var xhr = new XMLHttpRequest();
        xhr.open(""POST"", ""https://localhost:44447/api/Source/NewReservation"", true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ ""guestCount"": parseInt(guests), ""name"": lastName, ""phoneNumber"": phoneNumber, ""timeStamp"": new Date().toISOString() }));
    };

    function sleep(m");
            WriteLiteral(@"s) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
</script>

<!-- Scripts for Tables -->
<script>
    async function getAvailableTables() {
        let timer = 3;
        while (true) {
            var xhr = new XMLHttpRequest();
            xhr.open(""GET"", ""https://localhost:44447/api/Source/TableReady"", true);
            var jsonResponse
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        var data = xhr.responseText;
                        jsonResponse = JSON.parse(data);

                        if (jsonResponse !== ""False"") {
                            jsonResponse = JSON.parse(jsonResponse);

                            var tableNumber = jsonResponse.TableNumber;
                            var seats = jsonResponse.SeatCount;

                            var newRowText = `
                                                <th scope=""row"">${tableNumber}</th>
            ");
            WriteLiteral(@"                                    <td>${seats}</td>
                                                <td onclick=""deleteTableRow(this)""><button type=""button"" class=""btn btn-danger"">X</button></td>
                                             `

                            var list = document.getElementById(""availableTableTableBody"");
                            var newRow = list.insertRow(list.rows.length);
                            newRow.innerHTML = newRowText;
                            if (timer >= .5) {
                                timer -= .25;
                            }
                        } else {
                            if (timer < 5) {
                                timer += .25;
                            }
                        }
                    }
                }
            };

            xhr.send(null);

            await sleep(timer * 1000);
        }
    }

    function deleteTableRow(x) {
        var list = document.getElementById(""availableTableTableBody"");
     ");
            WriteLiteral(@"   var row = x.parentElement;
        list.deleteRow(row.rowIndex - 1);
    }

    getAvailableTables()
</script>

<!-- Scripts for Reservations -->
<script>
    async function getReservations() {
        let timer = 3;
        while (true) {
            var xhr = new XMLHttpRequest();
            xhr.open(""GET"", ""https://localhost:44447/api/Source/GetReservation"", true);
            var jsonResponse
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        var data = xhr.responseText;
                        jsonResponse = JSON.parse(data);

                        if (jsonResponse !== ""False"") {
                            jsonResponse = JSON.parse(jsonResponse);

                            var name = jsonResponse.Name;
                            var phone = jsonResponse.PhoneNumber;
                            var guests = jsonResponse.GuestCount;

                            var newRowText = `
      ");
            WriteLiteral(@"                                          <th scope=""row"">${name}</th>
                                                <td>${guests}</td>
                                                <td>${phone}</td>
                                                <td><input class=""tableNumberStyle"" type=""number"" placeholder=""-"" /></td>
                                                <td onclick=""deleteReservationRow(this)""><button type=""button"" class=""btn btn-danger"">X</button></td>
                                             `

                            var list = document.getElementById(""reservationTableBody"");
                            var newRow = list.insertRow(list.rows.length);
                            newRow.innerHTML = newRowText;
                            if (timer >= .5) {
                                timer -= .25;
                            }
                        } else {
                            if (timer < 5) {
                                timer += .25;
                            }
 ");
            WriteLiteral(@"                       }
                    }
                }
            };

            xhr.send(null);

            await sleep(timer * 1000);
        }
    }

    function tableSeated(guests, tableNumber) {
        // post the table seated event
        var xhr = new XMLHttpRequest();
        xhr.open(""POST"", ""https://localhost:44447/api/Source/TableSeated"", true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ ""guests"": guests, ""tableNumber"": tableNumber, ""timeStamp"": new Date().toISOString() }));
    }

    function deleteReservationRow(x) {
        var list = document.getElementById(""reservationTableBody"");
        var row = x.parentElement;
        var rowData = row.children;
        var tableNumber = parseInt(rowData[3].children[0].value);
        var guests = parseInt(rowData[1].innerText);

        tableSeated(guests, tableNumber);

        list.deleteRow(row.rowIndex - 1);
    }

    getReservations()
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<RestaurantFrontEnd.Pages.Hosts.IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<RestaurantFrontEnd.Pages.Hosts.IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<RestaurantFrontEnd.Pages.Hosts.IndexModel>)PageContext?.ViewData;
        public RestaurantFrontEnd.Pages.Hosts.IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
