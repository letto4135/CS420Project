@page
@model RestaurantFrontEnd.Pages.BusBoy.IndexModel
@{
}
<style>
</style>
<h1 style="margin-bottom:3rem;">Bus Staff</h1>
<div class="row">
    <div class="col-12">
        <h3>Tables Ready for Cleaning</h3>
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Table Number</th>
                    <th scope="col">Seats</th>
                    <th scope="col">Remove</th>
                </tr>
            </thead>
            <tbody id="availableTableTableBody">
                <tr>
                    <th scope="row">23</th>
                    <td>4</td>
                    <td onclick="deleteTableRow(this)"><button type="button" class="btn btn-danger">X</button></td>
                </tr>
                <tr>
                    <th scope="row">24</th>
                    <td>2</td>
                    <td onclick="deleteTableRow(this)"><button type="button" class="btn btn-danger">X</button></td>
                </tr>
                <tr>
                    <th scope="row">26</th>
                    <td>8</td>
                    <td onclick="deleteTableRow(this)"><button type="button" class="btn btn-danger">X</button></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Common scripts -->
<script>
    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
</script>

<!-- Scripts for Tables -->
<script>
    async function getAvailableTables() {
        let timer = 3;
        while (true) {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "https://localhost:44446/api/Source/GetCheckPaid", true);
            var jsonResponse
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        var data = xhr.responseText;
                        jsonResponse = JSON.parse(data);

                        if (jsonResponse !== "False") {
                            jsonResponse = JSON.parse(jsonResponse);

                            var tableNumber = jsonResponse.TableNumber;
                            var seats = jsonResponse.SeatCount;

                            var newRowText = `
                                                <th scope="row">${tableNumber}</th>
                                                <td>${seats}</td>
                                                <td onclick="deleteTableRow(this)"><button type="button" class="btn btn-danger">X</button></td>
                                             `

                            var list = document.getElementById("availableTableTableBody");
                            var newRow = list.insertRow(list.rows.length);
                            newRow.innerHTML = newRowText;
                            if (timer >= .5) {
                                timer -= .25;
                            }
                        } else {
                            if (timer < 5) {
                                timer += .25;
                            }
                        }
                    }
                }
            };

            xhr.send(null);

            await sleep(timer * 1000);
        }
    }

    function tableCleaned(tableNumber, seats) {
        // post the table seated event
        var xhr = new XMLHttpRequest();
        xhr.open("POST", "https://localhost:44446/api/Source/TableReady", true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ "tableNumber": tableNumber, "seatCount": seats , "timeStamp": new Date().toISOString() }));
    }

    function deleteTableRow(x) {
        var list = document.getElementById("availableTableTableBody");
        var row = x.parentElement;
        var rowData = row.children;
        var tableNumber = parseInt(rowData[0].innerText);
        var seats = parseInt(rowData[1].innerText);

        tableCleaned(tableNumber, seats);

        list.deleteRow(row.rowIndex - 1);
    }

    getAvailableTables()
</script>